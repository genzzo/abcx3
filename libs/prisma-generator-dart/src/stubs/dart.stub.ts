export const dartBaseClassStub = `
#{AutoGeneratedWarningText}

#{Imports}

class #{ClassName} #{ParentClass}#{ImplementedClass}{
    #{Properties}
    
      #{ClassName}({#{ConstructorArgs}});

      factory #{ClassName}.fromJson(Map<String, dynamic> json) =>
      #{ClassName}(
        #{fromJsonArgs}
      );

      #{OverrideAnnotation}
      Map<String, dynamic> toJson() => ({
        #{toJsonKeyValues}
      });
      }
    `;

export const dartFromJsonArg = `#{PropName}: json['#{PropName}'] as #{Type}#{Nullable}`;
export const dartFromJsonRefArg = `#{PropName}: json['#{PropName}'] != null ? #{Type}.fromJson(json['#{PropName}'] as Map<String, dynamic>) : null`;

export const dartFromJsonScalarListArg = `#{PropName}: json['#{PropName}'] as List<#{Type}>#{Nullable}`;
export const dartFromJsonModelListArg = `#{PropName}: json['#{PropName}'] != null ? createModels<#{Type}>(json['#{PropName}'], #{Type}.fromJson) : null`;

export const dartFromJsonEnumArg = `#{PropName}: #{Type}.values.byName(json['#{PropName}'])`;
export const dartFromJsonEnumListArg = `#{PropName}: (json['#{PropName}']).map((item) => #{Type}.values.byName(json[item])).toList())`;
export const dartFromJsonDateTimeArg = `#{PropName}: json['#{PropName}'] != null ? DateTime.parse(json['#{PropName}']) : null`;

export const toJsonPropertyStub = `'#{PropName}': #{PropName}`;
export const toJsonListPropertyStub = `'#{PropName}': #{PropName}#{Nullable}.map((item) => item.toJson()).toList()`;
//export const toJsonObjectPropertyStub = `'#{PropName}': #{PropName}`;


export const dartConstructorArgument = `#{Required} this.#{PropName}`;
export const dartConstructorArgumentWithDefaultValue = `#{Required} this.#{PropName} = #{DefaultValue}`;


export const dartPropertyStub = `#{Type}#{Nullable} #{PropName};`;

export const dartPropertyStubWithDefaultValue = `#{Type}#{Nullable} #{PropName} = #{DefaultValue};`;

export const dartModelBaseClassStub = `abstract class ModelBase {
    abstract int? id;
    Map<String, dynamic> toJson();
  }
  
  typedef JsonModelFactory<T> = T Function(Map<String, dynamic> json);

  List<T> createModels<T>(json, JsonModelFactory<T> jsonFactory) {
    List<T> instances = [];
    for (final item in json) {
      instances.add(jsonFactory(item as Map<String, dynamic>));
    }
    return instances;
  }
  `;
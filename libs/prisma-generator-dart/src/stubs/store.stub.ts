
export const dartStoreStub = `
#{AutoGeneratedWarningText}

import 'package:abcx3/gen_backend_routes.dart';
import 'package:abcx3/gen_models/common/abcx3_prisma.library.dart';
import 'package:abcx3/gen_models/models_library.dart';

typedef #{Model}Store = _#{Model}Store<#{Model}>

class _#{Model}Store<T extends #{Model}> extends ModelStreamStore<int, T> {

  static late final _#{Model}Store _instance;

  static get instance {
    _instance ??= _#{Model}Store._();
    return _instance;
  }

  _#{Model}Store._() : super(#{Model}.fromJson as JsonModelFactory<T>);

  int getPlayerUserId(Player player) => player.userId!;

  int getPlayerGameId(Player player) => player.gameId!;

  List<T> byUserId(int userId) => getManyByPropertyValue(getPlayerUserId, userId);

  List<T> byGameId(int gameId) => getManyByPropertyValue(getPlayerGameId, gameId);


  Stream<List<T>?> byGameId$(int gameId, {bool useCache = true}) =>
      getManyByFieldValue$<int>(getPropVal: getPlayerGameId, value: gameId, endpoint: Abc3Route.player_byGameId_$gameId_get, useCache: useCache);

  Stream<List<T>?> byUserId$(int userId, {bool useCache = true}) =>
      getManyByFieldValue$<int>(getPropVal: getPlayerUserId, value: userId, endpoint: Abc3Route.player_$id_get, useCache: useCache);
}

`;

export const dartStoreGetVal = `#{FieldType} get#{Model}#{FieldName}(#{Model} #{model}) => #{model}.{#fieldName}!`;

export const dartStoreGetByPropertyVal = `Stream<T?> getBy#{FieldName}$(#{FieldType} #{fieldName}, {bool useCache = true}) =>
getByFieldValue$<#{FieldType}>(getPropVal: get#{Model}#{FieldName}, value: #{fieldName}, endpoint: Abc3Route.#{model}_by#{FieldName}_$#{fieldName}_get, useCache: useCache);`;

